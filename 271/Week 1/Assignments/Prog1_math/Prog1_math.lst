Microsoft (R) Macro Assembler Version 12.00.30501.0	    04/17/15 01:02:24
My Math     (prog1_math.asm				     Page 1 - 1


				TITLE My Math     (prog1_math.asm)

				; Author: Jennifer Frase
				; Course / Project ID :  CS371  Program 1       Date: 4/12/15
				; Description: Displays my name and the basic math of two user input numbers

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 00000000			.data
				;user variables and result variables
 00000000 00000000			firstNum		DWORD	?
 00000004 00000000			secondNum		DWORD	?
 00000008 00000000			sum				DWORD	?
 0000000C 00000000			product			DWORD	?
 00000010 00000000			diff			DWORD	?
 00000014 00000000			quotent			DWORD	?
 00000018 00000000			remain			DWORD	?
 0000001C 00000000			remainDub		DWORD	?
 00000020 00000000			quotentDub		DWORD	?

				;constants used to calculate floating point division
 00000024 0000000A			factoring		DWORD	10
 00000028 00000003			counter			DWORD	3

				;prompts
 0000002C 50 6C 65 61 73		prompt			BYTE	"Please give two numbers where the first is larger than the second.", 0
	   65 20 67 69 76
	   65 20 74 77 6F
	   20 6E 75 6D 62
	   65 72 73 20 77
	   68 65 72 65 20
	   74 68 65 20 66
	   69 72 73 74 20
	   69 73 20 6C 61
	   72 67 65 72 20
	   74 68 61 6E 20
	   74 68 65 20 73
	   65 63 6F 6E 64
	   2E 00
 0000006F 54 68 65 6E 20		prompt2			BYTE	"Then I will give you the sum, the difference, the product, the quotent,", 0
	   49 20 77 69 6C
	   6C 20 67 69 76
	   65 20 79 6F 75
	   20 74 68 65 20
	   73 75 6D 2C 20
	   74 68 65 20 64
	   69 66 66 65 72
	   65 6E 63 65 2C
	   20 74 68 65 20
	   70 72 6F 64 75
	   63 74 2C 20 74
	   68 65 20 71 75
	   6F 74 65 6E 74
	   2C 00
 000000B7 61 6E 64 20 74		prompt3			BYTE	"and the remainder.", 0
	   68 65 20 72 65
	   6D 61 69 6E 64
	   65 72 2E 00
 000000CA 31 73 74 20 4E		promptNum1		BYTE	"1st Number : ", 0
	   75 6D 62 65 72
	   20 3A 20 00
 000000D8 32 6E 64 20 4E		promptNum2		BYTE	"2nd Number : ", 0
	   75 6D 62 65 72
	   20 3A 20 00

 000000E6 4D 79 20 6E 61	myName			BYTE	"My name is Jennifer Frase and this is My Math.", 0
	   6D 65 20 69 73
	   20 4A 65 6E 6E
	   69 66 65 72 20
	   46 72 61 73 65
	   20 61 6E 64 20
	   74 68 69 73 20
	   69 73 20 4D 79
	   20 4D 61 74 68
	   2E 00
 00000115 54 68 61 6E 6B	goodbye			BYTE	"Thank you for using My Math.", 0
	   20 79 6F 75 20
	   66 6F 72 20 75
	   73 69 6E 67 20
	   4D 79 20 4D 61
	   74 68 2E 00

				;math symbols
 00000132 20 2B 20 00			addResult		BYTE	" + ", 0
 00000136 20 3D 20 00			equalResult		BYTE	" = ", 0
 0000013A 20 2D 20 00			subResult		BYTE	" - ", 0
 0000013E 20 2F 20 00			divResult		BYTE	" / ", 0
 00000142 20 78 20 00			multResult		BYTE	" x ", 0
 00000146 20 72 65 6D 61		modResult		BYTE	" remainder of ", 0
	   69 6E 64 65 72
	   20 6F 66 20 00
 00000155 2E 00				decResult		BYTE	".", 0

				;repeat variables
 00000157 54 68 65 20 66		warn			BYTE	"The first number was not bigger than the second, please give new numbers.", 0
	   69 72 73 74 20
	   6E 75 6D 62 65
	   72 20 77 61 73
	   20 6E 6F 74 20
	   62 69 67 67 65
	   72 20 74 68 61
	   6E 20 74 68 65
	   20 73 65 63 6F
	   6E 64 2C 20 70
	   6C 65 61 73 65
	   20 67 69 76 65
	   20 6E 65 77 20
	   6E 75 6D 62 65
	   72 73 2E 00
 000001A1 44 6F 20 79 6F		askAgain		BYTE	"Do you want to do another set of calculations? Type 0 for no and 1 for yes. ", 0
	   75 20 77 61 6E
	   74 20 74 6F 20
	   64 6F 20 61 6E
	   6F 74 68 65 72
	   20 73 65 74 20
	   6F 66 20 63 61
	   6C 63 75 6C 61
	   74 69 6F 6E 73
	   3F 20 54 79 70
	   65 20 30 20 66
	   6F 72 20 6E 6F
	   20 61 6E 64 20
	   31 20 66 6F 72
	   20 79 65 73 2E
	   20 00
 000001EE 00000000			againVal		DWORD	?
 000001F2 50 6C 65 61 73		againWarn		BYTE	"Please only type 1 or 0.", 0
	   65 20 6F 6E 6C
	   79 20 74 79 70
	   65 20 31 20 6F
	   72 20 30 2E 00

 00000000			.code
 00000000			main PROC
				;intro
					;give name and program title
 00000000  BA 000000E6 R			mov		edx, OFFSET myName
 00000005  E8 00000000 E			call		WriteString
 0000000A  E8 00000000 E			call		CrLf
 0000000F  E8 00000000 E			call		CrLf

 00000014			ProgStart:
					;ask for two numbers
 00000014  BA 0000002C R			mov		edx, OFFSET prompt
 00000019  E8 00000000 E			call		WriteString
 0000001E  E8 00000000 E			call		CrLf
 00000023  BA 0000006F R			mov		edx, OFFSET prompt2
 00000028  E8 00000000 E			call		WriteString
 0000002D  E8 00000000 E			call		CrLf
 00000032  BA 000000B7 R			mov		edx, OFFSET prompt3
 00000037  E8 00000000 E			call		WriteString
 0000003C  E8 00000000 E			call		CrLf
 00000041  E8 00000000 E			call		CrLf
 00000046  EB 0F				jmp			GetNumbers

				;get first and second numbers
 00000048				NotBigger:
 00000048  BA 00000157 R			mov		edx, OFFSET warn
 0000004D  E8 00000000 E			call		WriteString
 00000052  E8 00000000 E			call		CrLf

 00000057				GetNumbers:
					;first num
 00000057  BA 000000CA R			mov		edx, OFFSET promptNum1
 0000005C  E8 00000000 E			call		WriteString
 00000061  E8 00000000 E			call		ReadInt
 00000066  A3 00000000 R			mov		firstNum, eax
 0000006B  E8 00000000 E			call		CrLf

					;second num
 00000070  BA 000000D8 R			mov		edx, OFFSET promptNum2
 00000075  E8 00000000 E			call		WriteString
 0000007A  E8 00000000 E			call		ReadInt
 0000007F  A3 00000004 R			mov		secondNum, eax
 00000084  E8 00000000 E			call		CrLf
 00000089  3B 05 00000000 R			cmp		eax, firstNum
 0000008F  7F B7				jg		NotBigger

				;calculate sum, difference, product, quotent, remainder
					;get sum
 00000091  A1 00000000 R			mov		eax, firstNum
 00000096  03 05 00000004 R			add		eax, secondNum
 0000009C  A3 00000008 R			mov		sum, eax

					;get diff	
 000000A1  A1 00000000 R			mov		eax, firstNum
 000000A6  2B 05 00000004 R			sub		eax, secondNum
 000000AC  A3 00000010 R			mov		diff, eax

					;get product
 000000B1  A1 00000000 R			mov		eax, firstNum
 000000B6  F7 25 00000004 R			mul		secondNum
 000000BC  A3 0000000C R			mov		product, eax

					;get quotent
 000000C1  A1 00000000 R			mov		eax, firstNum
 000000C6  F7 35 00000004 R			div		secondNum
 000000CC  A3 00000014 R			mov		quotent, eax

					;get remain
 000000D1  89 15 00000018 R			mov		remain, edx

					;get quotentDub
 000000D7  89 15 0000001C R			mov		remainDub, edx
 000000DD  B9 00000003				mov		ecx, 3
 000000E2  B8 00000000				mov		eax, 0
 000000E7  A3 00000020 R			mov		quotentDub, eax

 000000EC					CalcRemain:
 000000EC  89 0D 00000028 R				mov		counter, ecx
 000000F2  A1 0000001C R				mov		eax, remainDub
 000000F7  F7 25 00000024 R				mul		factoring
 000000FD  F7 35 00000004 R				div		secondNum
 00000103  89 15 0000001C R				mov		remainDub, edx
 00000109						CalcDub:
 00000109  F7 25 00000024 R					mul		factoring
 0000010F  E2 F8						loop	CalcDub
 00000111  8B 0D 00000028 R				mov		ecx, counter
 00000117  F7 35 00000024 R				div		factoring
 0000011D  01 05 00000020 R				add		quotentDub, eax
 00000123  E2 C7					loop	CalcRemain
						
				;display results
					;display sum
 00000125  A1 00000000 R			mov		eax, firstNum
 0000012A  E8 00000000 E			call		WriteDec
 0000012F  BA 00000132 R			mov		edx, OFFSET addResult
 00000134  E8 00000000 E			call		WriteString
 00000139  A1 00000004 R			mov		eax, secondNum
 0000013E  E8 00000000 E			call		WriteDec
 00000143  BA 00000136 R			mov		edx, OFFSET equalResult
 00000148  E8 00000000 E			call		WriteString
 0000014D  A1 00000008 R			mov		eax, sum
 00000152  E8 00000000 E			call		WriteDec
 00000157  E8 00000000 E			call		CrLf

					;display diff
 0000015C  A1 00000000 R			mov		eax, firstNum
 00000161  E8 00000000 E			call		WriteDec
 00000166  BA 0000013A R			mov		edx, OFFSET subResult
 0000016B  E8 00000000 E			call		WriteString
 00000170  A1 00000004 R			mov		eax, secondNum
 00000175  E8 00000000 E			call		WriteDec
 0000017A  BA 00000136 R			mov		edx, OFFSET equalResult
 0000017F  E8 00000000 E			call		WriteString
 00000184  A1 00000010 R			mov		eax, diff
 00000189  E8 00000000 E			call		WriteDec
 0000018E  E8 00000000 E			call		CrLf

					;display product
 00000193  A1 00000000 R			mov		eax, firstNum
 00000198  E8 00000000 E			call		WriteDec
 0000019D  BA 00000142 R			mov		edx, OFFSET multResult
 000001A2  E8 00000000 E			call		WriteString
 000001A7  A1 00000004 R			mov		eax, secondNum
 000001AC  E8 00000000 E			call		WriteDec
 000001B1  BA 00000136 R			mov		edx, OFFSET equalResult
 000001B6  E8 00000000 E			call		WriteString
 000001BB  A1 0000000C R			mov		eax, product
 000001C0  E8 00000000 E			call		WriteDec
 000001C5  E8 00000000 E			call		CrLf

					;display quotent and remain
 000001CA  A1 00000000 R			mov		eax, firstNum
 000001CF  E8 00000000 E			call		WriteDec
 000001D4  BA 0000013E R			mov		edx, OFFSET divResult
 000001D9  E8 00000000 E			call		WriteString
 000001DE  A1 00000004 R			mov		eax, secondNum
 000001E3  E8 00000000 E			call		WriteDec
 000001E8  BA 00000136 R			mov		edx, OFFSET equalResult
 000001ED  E8 00000000 E			call		WriteString
 000001F2  A1 00000014 R			mov		eax, quotent
 000001F7  E8 00000000 E			call		WriteDec
 000001FC  BA 00000146 R			mov		edx, OFFSET modResult
 00000201  E8 00000000 E			call		WriteString
 00000206  A1 00000018 R			mov		eax, remain
 0000020B  E8 00000000 E			call		WriteDec

					;display floating point quotent
 00000210  BA 00000136 R			mov		edx, OFFSET equalResult
 00000215  E8 00000000 E			call		WriteString
 0000021A  A1 00000014 R			mov		eax, quotent
 0000021F  E8 00000000 E			call		WriteDec
 00000224  BA 00000155 R			mov		edx, OFFSET	decResult
 00000229  E8 00000000 E			call		WriteString
 0000022E  A1 00000020 R			mov		eax, quotentDub
 00000233  E8 00000000 E			call		WriteDec
 00000238  E8 00000000 E			call		CrLf
 0000023D  EB 0F				jmp			AgainBlock

				;ask if user wants to repeat
 0000023F				WarnBlock:
 0000023F  BA 000001F2 R			mov		edx, OFFSET againWarn
 00000244  E8 00000000 E			call		WriteString
 00000249  E8 00000000 E			call		CrLf
					
 0000024E				AgainBlock:
 0000024E  BA 000001A1 R			mov		edx, OFFSET askAgain
 00000253  E8 00000000 E			call		WriteString
 00000258  E8 00000000 E			call		ReadInt
 0000025D  E8 00000000 E			call		Crlf
 00000262  A3 000001EE R			mov		againVal, eax
 00000267  83 3D 000001EE R			cmp		againVal, 1
	   01
 0000026E  0F 84 FFFFFDA0			je		ProgStart
 00000274  83 3D 000001EE R			cmp		againVal, 0
	   00
 0000027B  75 C2				jne		WarnBlock

				;say goodbye
 0000027D  BA 00000115 R			mov		edx, OFFSET goodbye
 00000282  E8 00000000 E			call		WriteString
 00000287  E8 00000000 E			call		CrLf
 0000028C  E8 00000000 E			call		CrLf
					exit	; exit to operating system
 00000291  6A 00	   *	    push   +000000000h
 00000293  E8 00000000 E   *	    call   ExitProcess
 00000298			main ENDP

				END main
Microsoft (R) Macro Assembler Version 12.00.30501.0	    04/17/15 01:02:24
My Math     (prog1_math.asm				     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000020B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000298 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000298 Public STDCALL
  ProgStart  . . . . . . . . . .	L Near	 00000014 _TEXT	
  NotBigger  . . . . . . . . . .	L Near	 00000048 _TEXT	
  GetNumbers . . . . . . . . . .	L Near	 00000057 _TEXT	
  CalcRemain . . . . . . . . . .	L Near	 000000EC _TEXT	
  CalcDub  . . . . . . . . . . .	L Near	 00000109 _TEXT	
  WarnBlock  . . . . . . . . . .	L Near	 0000023F _TEXT	
  AgainBlock . . . . . . . . . .	L Near	 0000024E _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
addResult  . . . . . . . . . . .	Byte	 00000132 _DATA	
againVal . . . . . . . . . . . .	DWord	 000001EE _DATA	
againWarn  . . . . . . . . . . .	Byte	 000001F2 _DATA	
askAgain . . . . . . . . . . . .	Byte	 000001A1 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
counter  . . . . . . . . . . . .	DWord	 00000028 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
decResult  . . . . . . . . . . .	Byte	 00000155 _DATA	
diff . . . . . . . . . . . . . .	DWord	 00000010 _DATA	
divResult  . . . . . . . . . . .	Byte	 0000013E _DATA	
equalResult  . . . . . . . . . .	Byte	 00000136 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
factoring  . . . . . . . . . . .	DWord	 00000024 _DATA	
firstNum . . . . . . . . . . . .	DWord	 00000000 _DATA	
goodbye  . . . . . . . . . . . .	Byte	 00000115 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
modResult  . . . . . . . . . . .	Byte	 00000146 _DATA	
multResult . . . . . . . . . . .	Byte	 00000142 _DATA	
myName . . . . . . . . . . . . .	Byte	 000000E6 _DATA	
product  . . . . . . . . . . . .	DWord	 0000000C _DATA	
prompt2  . . . . . . . . . . . .	Byte	 0000006F _DATA	
prompt3  . . . . . . . . . . . .	Byte	 000000B7 _DATA	
promptNum1 . . . . . . . . . . .	Byte	 000000CA _DATA	
promptNum2 . . . . . . . . . . .	Byte	 000000D8 _DATA	
prompt . . . . . . . . . . . . .	Byte	 0000002C _DATA	
quotentDub . . . . . . . . . . .	DWord	 00000020 _DATA	
quotent  . . . . . . . . . . . .	DWord	 00000014 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remainDub  . . . . . . . . . . .	DWord	 0000001C _DATA	
remain . . . . . . . . . . . . .	DWord	 00000018 _DATA	
secondNum  . . . . . . . . . . .	DWord	 00000004 _DATA	
subResult  . . . . . . . . . . .	Byte	 0000013A _DATA	
sum  . . . . . . . . . . . . . .	DWord	 00000008 _DATA	
warn . . . . . . . . . . . . . .	Byte	 00000157 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
